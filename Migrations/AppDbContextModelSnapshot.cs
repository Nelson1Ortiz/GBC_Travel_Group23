// <auto-generated />
using System;
using GBC_Travel_Group23.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GBC_Travel_Group23.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GBC_Travel_Group23.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestCount")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.CarRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("CarYear")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("CarRentals");

                    b.HasData(
                        new
                        {
                            Id = 10001,
                            Capacity = 5,
                            CarYear = 2020,
                            Count = 15,
                            LocationId = 1001,
                            Make = "Toyota",
                            Model = "Camry",
                            Rate = 75.0
                        },
                        new
                        {
                            Id = 10002,
                            Capacity = 7,
                            CarYear = 2019,
                            Count = 10,
                            LocationId = 1002,
                            Make = "Ford",
                            Model = "Explorer",
                            Rate = 85.0
                        },
                        new
                        {
                            Id = 10003,
                            Capacity = 8,
                            CarYear = 2021,
                            Count = 12,
                            LocationId = 1003,
                            Make = "Chevrolet",
                            Model = "Suburban",
                            Rate = 90.0
                        },
                        new
                        {
                            Id = 10004,
                            Capacity = 12,
                            CarYear = 2020,
                            Count = 5,
                            LocationId = 1004,
                            Make = "Mercedes-Benz",
                            Model = "Sprinter",
                            Rate = 120.0
                        },
                        new
                        {
                            Id = 10005,
                            Capacity = 5,
                            CarYear = 2018,
                            Count = 20,
                            LocationId = 1005,
                            Make = "Honda",
                            Model = "Accord",
                            Rate = 60.0
                        },
                        new
                        {
                            Id = 10006,
                            Capacity = 5,
                            CarYear = 2022,
                            Count = 10,
                            LocationId = 1006,
                            Make = "Jeep",
                            Model = "Grand Cherokee",
                            Rate = 80.0
                        },
                        new
                        {
                            Id = 10007,
                            Capacity = 8,
                            CarYear = 2019,
                            Count = 8,
                            LocationId = 1007,
                            Make = "Nissan",
                            Model = "Armada",
                            Rate = 95.0
                        },
                        new
                        {
                            Id = 10008,
                            Capacity = 8,
                            CarYear = 2021,
                            Count = 12,
                            LocationId = 1008,
                            Make = "Hyundai",
                            Model = "Palisade",
                            Rate = 100.0
                        },
                        new
                        {
                            Id = 10009,
                            Capacity = 5,
                            CarYear = 2020,
                            Count = 7,
                            LocationId = 1009,
                            Make = "BMW",
                            Model = "X5",
                            Rate = 110.0
                        },
                        new
                        {
                            Id = 10010,
                            Capacity = 7,
                            CarYear = 2022,
                            Count = 9,
                            LocationId = 1010,
                            Make = "Audi",
                            Model = "Q7",
                            Rate = 130.0
                        },
                        new
                        {
                            Id = 10011,
                            Capacity = 8,
                            CarYear = 2021,
                            Count = 6,
                            LocationId = 1011,
                            Make = "Kia",
                            Model = "Telluride",
                            Rate = 90.0
                        },
                        new
                        {
                            Id = 10012,
                            Capacity = 8,
                            CarYear = 2019,
                            Count = 4,
                            LocationId = 1012,
                            Make = "Lexus",
                            Model = "LX",
                            Rate = 150.0
                        },
                        new
                        {
                            Id = 10013,
                            Capacity = 7,
                            CarYear = 2020,
                            Count = 10,
                            LocationId = 1013,
                            Make = "Volkswagen",
                            Model = "Atlas",
                            Rate = 85.0
                        },
                        new
                        {
                            Id = 10014,
                            Capacity = 5,
                            CarYear = 2021,
                            Count = 18,
                            LocationId = 1014,
                            Make = "Subaru",
                            Model = "Outback",
                            Rate = 70.0
                        },
                        new
                        {
                            Id = 10015,
                            Capacity = 7,
                            CarYear = 2022,
                            Count = 5,
                            LocationId = 1015,
                            Make = "Tesla",
                            Model = "Model X",
                            Rate = 200.0
                        },
                        new
                        {
                            Id = 10016,
                            Capacity = 7,
                            CarYear = 2020,
                            Count = 12,
                            LocationId = 1016,
                            Make = "Mazda",
                            Model = "CX-9",
                            Rate = 80.0
                        });
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 10001,
                            Email = "fcottem0@linkedin.com",
                            FullName = "Frederica Cottem",
                            Phone = "+7 (375) 654-3590"
                        },
                        new
                        {
                            Id = 10002,
                            Email = "acomellini1@cnet.com",
                            FullName = "Annabella Comellini",
                            Phone = "+93 (923) 606-7690"
                        },
                        new
                        {
                            Id = 10003,
                            Email = "rdaniel2@sfgate.com",
                            FullName = "Redd Daniel",
                            Phone = "+86 (422) 538-4788"
                        },
                        new
                        {
                            Id = 10004,
                            Email = "tbister3@so-net.ne.jp",
                            FullName = "Tana Bister",
                            Phone = "+7 (528) 881-6250"
                        },
                        new
                        {
                            Id = 10005,
                            Email = "nboulder4@cisco.com",
                            FullName = "Nikaniki Boulder",
                            Phone = "+93 (657) 895-3488"
                        },
                        new
                        {
                            Id = 10006,
                            Email = "aplaide5@smh.com.au",
                            FullName = "Ariana Plaide",
                            Phone = "+57 (863) 320-2637"
                        },
                        new
                        {
                            Id = 10007,
                            Email = "blivzey6@businessweek.com",
                            FullName = "Burr Livzey",
                            Phone = "+675 (218) 591-6032"
                        },
                        new
                        {
                            Id = 10008,
                            Email = "wbarrow7@arstechnica.com",
                            FullName = "Waring Barrow",
                            Phone = "+86 (398) 693-2908"
                        },
                        new
                        {
                            Id = 10009,
                            Email = "bbrymham8@usgs.gov",
                            FullName = "Brade Brymham",
                            Phone = "+55 (979) 581-5768"
                        });
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ArrivalLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartureLocationId")
                        .HasColumnType("int");

                    b.Property<string>("FlightCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArrivalLocationId");

                    b.HasIndex("DepartureLocationId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 10001,
                            Airline = "American Airlines",
                            ArrivalDate = new DateTime(2024, 2, 27, 23, 55, 44, 498, DateTimeKind.Local).AddTicks(2710),
                            ArrivalLocationId = 1002,
                            DepartureDate = new DateTime(2024, 2, 27, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2669),
                            DepartureLocationId = 1001,
                            FlightCode = "AA101",
                            Plane = "Boeing 777",
                            Price = 350.0,
                            TotalSeats = 300
                        },
                        new
                        {
                            Id = 10002,
                            Airline = "American Airlines",
                            ArrivalDate = new DateTime(2024, 3, 5, 23, 55, 44, 498, DateTimeKind.Local).AddTicks(2714),
                            ArrivalLocationId = 1001,
                            DepartureDate = new DateTime(2024, 3, 5, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2713),
                            DepartureLocationId = 1002,
                            FlightCode = "AA102",
                            Plane = "Boeing 777",
                            Price = 360.0,
                            TotalSeats = 300
                        },
                        new
                        {
                            Id = 10003,
                            Airline = "United Airlines",
                            ArrivalDate = new DateTime(2024, 2, 28, 0, 55, 44, 498, DateTimeKind.Local).AddTicks(2719),
                            ArrivalLocationId = 1004,
                            DepartureDate = new DateTime(2024, 2, 27, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2717),
                            DepartureLocationId = 1003,
                            FlightCode = "UA203",
                            Plane = "Boeing 787",
                            Price = 450.0,
                            TotalSeats = 250
                        },
                        new
                        {
                            Id = 10004,
                            Airline = "United Airlines",
                            ArrivalDate = new DateTime(2024, 3, 6, 0, 55, 44, 498, DateTimeKind.Local).AddTicks(2723),
                            ArrivalLocationId = 1003,
                            DepartureDate = new DateTime(2024, 3, 5, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2721),
                            DepartureLocationId = 1004,
                            FlightCode = "UA204",
                            Plane = "Boeing 787",
                            Price = 460.0,
                            TotalSeats = 250
                        },
                        new
                        {
                            Id = 10005,
                            Airline = "Delta Airlines",
                            ArrivalDate = new DateTime(2024, 2, 28, 1, 55, 44, 498, DateTimeKind.Local).AddTicks(2727),
                            ArrivalLocationId = 1006,
                            DepartureDate = new DateTime(2024, 2, 27, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2725),
                            DepartureLocationId = 1005,
                            FlightCode = "DL305",
                            Plane = "Airbus A330",
                            Price = 550.0,
                            TotalSeats = 290
                        },
                        new
                        {
                            Id = 10006,
                            Airline = "Delta Airlines",
                            ArrivalDate = new DateTime(2024, 3, 6, 1, 55, 44, 498, DateTimeKind.Local).AddTicks(2731),
                            ArrivalLocationId = 1005,
                            DepartureDate = new DateTime(2024, 3, 5, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2730),
                            DepartureLocationId = 1006,
                            FlightCode = "DL306",
                            Plane = "Airbus A330",
                            Price = 560.0,
                            TotalSeats = 290
                        },
                        new
                        {
                            Id = 10007,
                            Airline = "British Airways",
                            ArrivalDate = new DateTime(2024, 2, 28, 8, 55, 44, 498, DateTimeKind.Local).AddTicks(2735),
                            ArrivalLocationId = 1008,
                            DepartureDate = new DateTime(2024, 2, 27, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2734),
                            DepartureLocationId = 1007,
                            FlightCode = "BA407",
                            Plane = "Boeing 747",
                            Price = 800.0,
                            TotalSeats = 345
                        },
                        new
                        {
                            Id = 10008,
                            Airline = "British Airways",
                            ArrivalDate = new DateTime(2024, 3, 6, 8, 55, 44, 498, DateTimeKind.Local).AddTicks(2740),
                            ArrivalLocationId = 1007,
                            DepartureDate = new DateTime(2024, 3, 5, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2738),
                            DepartureLocationId = 1008,
                            FlightCode = "BA408",
                            Plane = "Boeing 747",
                            Price = 810.0,
                            TotalSeats = 345
                        },
                        new
                        {
                            Id = 10009,
                            Airline = "Lufthansa",
                            ArrivalDate = new DateTime(2024, 2, 28, 9, 55, 44, 498, DateTimeKind.Local).AddTicks(2744),
                            ArrivalLocationId = 1010,
                            DepartureDate = new DateTime(2024, 2, 27, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2742),
                            DepartureLocationId = 1009,
                            FlightCode = "LH509",
                            Plane = "Airbus A350",
                            Price = 850.0,
                            TotalSeats = 320
                        },
                        new
                        {
                            Id = 10010,
                            Airline = "Lufthansa",
                            ArrivalDate = new DateTime(2024, 3, 6, 9, 55, 44, 498, DateTimeKind.Local).AddTicks(2748),
                            ArrivalLocationId = 1009,
                            DepartureDate = new DateTime(2024, 3, 5, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2746),
                            DepartureLocationId = 1010,
                            FlightCode = "LH510",
                            Plane = "Airbus A350",
                            Price = 860.0,
                            TotalSeats = 320
                        },
                        new
                        {
                            Id = 10011,
                            Airline = "Emirates",
                            ArrivalDate = new DateTime(2024, 2, 28, 3, 55, 44, 498, DateTimeKind.Local).AddTicks(2752),
                            ArrivalLocationId = 1012,
                            DepartureDate = new DateTime(2024, 2, 27, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2751),
                            DepartureLocationId = 1011,
                            FlightCode = "EM611",
                            Plane = "Boeing 777",
                            Price = 700.0,
                            TotalSeats = 360
                        },
                        new
                        {
                            Id = 10012,
                            Airline = "Emirates",
                            ArrivalDate = new DateTime(2024, 3, 6, 3, 55, 44, 498, DateTimeKind.Local).AddTicks(2756),
                            ArrivalLocationId = 1011,
                            DepartureDate = new DateTime(2024, 3, 5, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2755),
                            DepartureLocationId = 1012,
                            FlightCode = "EM612",
                            Plane = "Boeing 777",
                            Price = 710.0,
                            TotalSeats = 360
                        },
                        new
                        {
                            Id = 10013,
                            Airline = "Qantas",
                            ArrivalDate = new DateTime(2024, 2, 28, 18, 55, 44, 498, DateTimeKind.Local).AddTicks(2761),
                            ArrivalLocationId = 1014,
                            DepartureDate = new DateTime(2024, 2, 27, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2759),
                            DepartureLocationId = 1013,
                            FlightCode = "QF713",
                            Plane = "Boeing 787",
                            Price = 1000.0,
                            TotalSeats = 236
                        },
                        new
                        {
                            Id = 10014,
                            Airline = "Qantas",
                            ArrivalDate = new DateTime(2024, 3, 6, 18, 55, 44, 498, DateTimeKind.Local).AddTicks(2765),
                            ArrivalLocationId = 1013,
                            DepartureDate = new DateTime(2024, 3, 5, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2763),
                            DepartureLocationId = 1014,
                            FlightCode = "QF714",
                            Plane = "Boeing 787",
                            Price = 1010.0,
                            TotalSeats = 236
                        },
                        new
                        {
                            Id = 10015,
                            Airline = "Air France",
                            ArrivalDate = new DateTime(2024, 2, 28, 10, 55, 44, 498, DateTimeKind.Local).AddTicks(2769),
                            ArrivalLocationId = 1016,
                            DepartureDate = new DateTime(2024, 2, 27, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2767),
                            DepartureLocationId = 1015,
                            FlightCode = "AF815",
                            Plane = "Boeing 777",
                            Price = 900.0,
                            TotalSeats = 310
                        },
                        new
                        {
                            Id = 10016,
                            Airline = "Air France",
                            ArrivalDate = new DateTime(2024, 3, 6, 10, 55, 44, 498, DateTimeKind.Local).AddTicks(2773),
                            ArrivalLocationId = 1015,
                            DepartureDate = new DateTime(2024, 3, 5, 22, 55, 44, 498, DateTimeKind.Local).AddTicks(2771),
                            DepartureLocationId = 1016,
                            FlightCode = "AF816",
                            Plane = "Boeing 777",
                            Price = 910.0,
                            TotalSeats = 310
                        });
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 10001,
                            Address = "123 Main Street",
                            Amenities = "Free Wi-Fi, Pool, Gym",
                            LocationId = 1001,
                            Name = "Chill Hotel"
                        },
                        new
                        {
                            Id = 10002,
                            Address = "456 Oak Avenue",
                            Amenities = "Breakfast, Parking, Pet Friendly",
                            LocationId = 1002,
                            Name = "Comfort Inn"
                        },
                        new
                        {
                            Id = 10003,
                            Address = "789 Pine Road",
                            Amenities = "Spa, Restaurant, Conference Rooms",
                            LocationId = 1003,
                            Name = "Grand Resort"
                        },
                        new
                        {
                            Id = 10004,
                            Address = "101 Skyline Boulevard",
                            Amenities = "City View, Rooftop Bar",
                            LocationId = 1004,
                            Name = "Cityscape Suites"
                        },
                        new
                        {
                            Id = 10005,
                            Address = "202 Beachfront Avenue",
                            Amenities = "Beach Access, Ocean View",
                            LocationId = 1005,
                            Name = "Seaside Retreat"
                        },
                        new
                        {
                            Id = 10006,
                            Address = "303 Summit Drive",
                            Amenities = "Hiking Trails, Fireplace",
                            LocationId = 1006,
                            Name = "Mountain Lodge"
                        },
                        new
                        {
                            Id = 10007,
                            Address = "404 Downtown Street",
                            Amenities = "Modern Decor, Lounge",
                            LocationId = 1007,
                            Name = "Urban Oasis Hotel"
                        },
                        new
                        {
                            Id = 10008,
                            Address = "505 Serene Road",
                            Amenities = "Garden, Reading, Room",
                            LocationId = 1008,
                            Name = "Tranquil Inn"
                        },
                        new
                        {
                            Id = 10009,
                            Address = "606 Heritage Lane",
                            Amenities = "Antique Furnishings, Ballroom",
                            LocationId = 1009,
                            Name = "Historic Mansion Hotel"
                        },
                        new
                        {
                            Id = 10010,
                            Address = "707 Maple Court",
                            Amenities = "Kid's Play Area, Family-Friendly",
                            LocationId = 1010,
                            Name = "Family Suites"
                        },
                        new
                        {
                            Id = 10011,
                            Address = "808 Business Plaza",
                            Amenities = "Business Center, Concierge",
                            LocationId = 1011,
                            Name = "Executive Stay"
                        },
                        new
                        {
                            Id = 10012,
                            Address = "909 Forest Path",
                            Amenities = "Nature Trails, Bird Watching",
                            LocationId = 1012,
                            Name = "Woodland Lodge"
                        },
                        new
                        {
                            Id = 10013,
                            Address = "1001 Grand Avenue",
                            Amenities = "Luxurious Spa, Fine Dining",
                            LocationId = 1013,
                            Name = "Elegant Plaza Hotel"
                        },
                        new
                        {
                            Id = 10014,
                            Address = "1102 Waterfront Road",
                            Amenities = "River View, Fishing Dock",
                            LocationId = 1014,
                            Name = "Riverside Inn"
                        },
                        new
                        {
                            Id = 10015,
                            Address = "1203 Cozy Lane",
                            Amenities = "Charming Decor, Quiet Atmosphere",
                            LocationId = 1015,
                            Name = "Quaint Cottage Hotel"
                        },
                        new
                        {
                            Id = 10016,
                            Address = "123 Cummer Road",
                            Amenities = "Great View, Continental Breakfast",
                            LocationId = 1016,
                            Name = "Minerland Inn"
                        },
                        new
                        {
                            Id = 10017,
                            Address = "132 Nether Lane",
                            Amenities = "Classy Decor, Free Drinks",
                            LocationId = 1017,
                            Name = "Diamond Sword Hotel"
                        });
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.HotelRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("MaxOccupants")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("RoomCount")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelRooms");

                    b.HasData(
                        new
                        {
                            Id = 10001,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10001,
                            MaxOccupants = 1,
                            Rate = 100.0,
                            RoomCount = 4,
                            RoomName = "1 Single"
                        },
                        new
                        {
                            Id = 10002,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10002,
                            MaxOccupants = 1,
                            Rate = 120.0,
                            RoomCount = 4,
                            RoomName = "1 Single"
                        },
                        new
                        {
                            Id = 10003,
                            Amenities = "Ensuite Bathroom",
                            HotelId = 10002,
                            MaxOccupants = 4,
                            Rate = 180.0,
                            RoomCount = 4,
                            RoomName = "2 Double"
                        },
                        new
                        {
                            Id = 10004,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10003,
                            MaxOccupants = 2,
                            Rate = 140.0,
                            RoomCount = 4,
                            RoomName = "1 Queen"
                        },
                        new
                        {
                            Id = 10005,
                            Amenities = "Ensuite Bathroom",
                            HotelId = 10003,
                            MaxOccupants = 2,
                            Rate = 140.0,
                            RoomCount = 4,
                            RoomName = "1 King"
                        },
                        new
                        {
                            Id = 10006,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10003,
                            MaxOccupants = 4,
                            Rate = 180.0,
                            RoomCount = 4,
                            RoomName = "2 Twin"
                        },
                        new
                        {
                            Id = 10007,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10004,
                            MaxOccupants = 3,
                            Rate = 160.0,
                            RoomCount = 4,
                            RoomName = "1 Double, 1 Queen"
                        },
                        new
                        {
                            Id = 10008,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10004,
                            MaxOccupants = 3,
                            Rate = 160.0,
                            RoomCount = 4,
                            RoomName = "1 King, 1 Twin"
                        },
                        new
                        {
                            Id = 10009,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10005,
                            MaxOccupants = 1,
                            Rate = 120.0,
                            RoomCount = 4,
                            RoomName = "1 Single"
                        },
                        new
                        {
                            Id = 10010,
                            Amenities = "Ensuite Bathroom",
                            HotelId = 10005,
                            MaxOccupants = 4,
                            Rate = 180.0,
                            RoomCount = 4,
                            RoomName = "2 Double"
                        },
                        new
                        {
                            Id = 10011,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10006,
                            MaxOccupants = 2,
                            Rate = 140.0,
                            RoomCount = 4,
                            RoomName = "1 Queen"
                        },
                        new
                        {
                            Id = 10012,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10006,
                            MaxOccupants = 2,
                            Rate = 140.0,
                            RoomCount = 4,
                            RoomName = "1 King"
                        },
                        new
                        {
                            Id = 10013,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10006,
                            MaxOccupants = 4,
                            Rate = 180.0,
                            RoomCount = 4,
                            RoomName = "2 Twin"
                        },
                        new
                        {
                            Id = 10014,
                            Amenities = "Ensuite Bathroom",
                            HotelId = 10007,
                            MaxOccupants = 3,
                            Rate = 160.0,
                            RoomCount = 4,
                            RoomName = "1 Double, 1 Queen"
                        },
                        new
                        {
                            Id = 10015,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10007,
                            MaxOccupants = 3,
                            Rate = 160.0,
                            RoomCount = 4,
                            RoomName = "1 King, 1 Twin"
                        },
                        new
                        {
                            Id = 10016,
                            Amenities = "Ensuite Bathroom",
                            HotelId = 10008,
                            MaxOccupants = 1,
                            Rate = 120.0,
                            RoomCount = 4,
                            RoomName = "1 Single"
                        },
                        new
                        {
                            Id = 10017,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10008,
                            MaxOccupants = 4,
                            Rate = 180.0,
                            RoomCount = 4,
                            RoomName = "2 Double"
                        },
                        new
                        {
                            Id = 10018,
                            Amenities = "Ensuite Bathroom",
                            HotelId = 10009,
                            MaxOccupants = 2,
                            Rate = 140.0,
                            RoomCount = 4,
                            RoomName = "1 Queen"
                        },
                        new
                        {
                            Id = 10019,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10009,
                            MaxOccupants = 2,
                            Rate = 140.0,
                            RoomCount = 4,
                            RoomName = "1 King"
                        },
                        new
                        {
                            Id = 10020,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10009,
                            MaxOccupants = 4,
                            Rate = 180.0,
                            RoomCount = 4,
                            RoomName = "2 Twin"
                        },
                        new
                        {
                            Id = 10021,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10010,
                            MaxOccupants = 3,
                            Rate = 160.0,
                            RoomCount = 4,
                            RoomName = "1 Double, 1 Queen"
                        },
                        new
                        {
                            Id = 10022,
                            Amenities = "Ensuite Bathroom",
                            HotelId = 10011,
                            MaxOccupants = 2,
                            Rate = 150.0,
                            RoomCount = 4,
                            RoomName = "1 Queen"
                        },
                        new
                        {
                            Id = 10023,
                            Amenities = "Ensuite Bathroom",
                            HotelId = 10011,
                            MaxOccupants = 4,
                            Rate = 190.0,
                            RoomCount = 4,
                            RoomName = "2 Twin"
                        },
                        new
                        {
                            Id = 10024,
                            Amenities = "Ensuite Bathroom",
                            HotelId = 10011,
                            MaxOccupants = 3,
                            Rate = 170.0,
                            RoomCount = 4,
                            RoomName = "1 King, 1 Single"
                        },
                        new
                        {
                            Id = 10025,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10012,
                            MaxOccupants = 4,
                            Rate = 180.0,
                            RoomCount = 4,
                            RoomName = "2 Double"
                        },
                        new
                        {
                            Id = 10026,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10012,
                            MaxOccupants = 2,
                            Rate = 160.0,
                            RoomCount = 4,
                            RoomName = "1 King"
                        },
                        new
                        {
                            Id = 10027,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10012,
                            MaxOccupants = 3,
                            Rate = 170.0,
                            RoomCount = 4,
                            RoomName = "1 Queen, 1 Twin"
                        },
                        new
                        {
                            Id = 10028,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10013,
                            MaxOccupants = 1,
                            Rate = 120.0,
                            RoomCount = 4,
                            RoomName = "1 Single"
                        },
                        new
                        {
                            Id = 10029,
                            Amenities = "Ensuite Bathroom",
                            HotelId = 10013,
                            MaxOccupants = 4,
                            Rate = 200.0,
                            RoomCount = 4,
                            RoomName = "2 Queen"
                        },
                        new
                        {
                            Id = 10030,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10013,
                            MaxOccupants = 4,
                            Rate = 210.0,
                            RoomCount = 4,
                            RoomName = "1 King, 1 Double"
                        },
                        new
                        {
                            Id = 10031,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10014,
                            MaxOccupants = 2,
                            Rate = 150.0,
                            RoomCount = 4,
                            RoomName = "1 Queen"
                        },
                        new
                        {
                            Id = 10032,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10014,
                            MaxOccupants = 2,
                            Rate = 160.0,
                            RoomCount = 4,
                            RoomName = "1 King"
                        },
                        new
                        {
                            Id = 10033,
                            Amenities = "Ensuite Bathroom, Free Wifi",
                            HotelId = 10014,
                            MaxOccupants = 4,
                            Rate = 190.0,
                            RoomCount = 4,
                            RoomName = "2 Twin"
                        },
                        new
                        {
                            Id = 10034,
                            Amenities = "Ensuite Bathroom",
                            HotelId = 10015,
                            MaxOccupants = 4,
                            Rate = 180.0,
                            RoomCount = 4,
                            RoomName = "2 Double"
                        },
                        new
                        {
                            Id = 10035,
                            Amenities = "Ensuite Bathroom",
                            HotelId = 10015,
                            MaxOccupants = 3,
                            Rate = 170.0,
                            RoomCount = 4,
                            RoomName = "1 Queen, 1 Twin"
                        },
                        new
                        {
                            Id = 10036,
                            Amenities = "Ensuite Bathroom",
                            HotelId = 10015,
                            MaxOccupants = 3,
                            Rate = 175.0,
                            RoomCount = 4,
                            RoomName = "1 King, 1 Single"
                        },
                        new
                        {
                            Id = 10037,
                            Amenities = "WiFi, TV",
                            HotelId = 10016,
                            MaxOccupants = 4,
                            Rate = 150.0,
                            RoomCount = 3,
                            RoomName = "2 Double"
                        },
                        new
                        {
                            Id = 10038,
                            Amenities = "WiFi, Ensuite Bathroom",
                            HotelId = 10016,
                            MaxOccupants = 3,
                            Rate = 120.0,
                            RoomCount = 2,
                            RoomName = "1 Queen, 1 Single"
                        },
                        new
                        {
                            Id = 10039,
                            Amenities = "TV, Mini Fridge",
                            HotelId = 10016,
                            MaxOccupants = 4,
                            Rate = 180.0,
                            RoomCount = 5,
                            RoomName = "1 King, 1 Double"
                        },
                        new
                        {
                            Id = 10040,
                            Amenities = "WiFi, TV",
                            HotelId = 10017,
                            MaxOccupants = 3,
                            Rate = 130.0,
                            RoomCount = 4,
                            RoomName = "3 Single"
                        },
                        new
                        {
                            Id = 10041,
                            Amenities = "Ensuite Bathroom, Mini Fridge",
                            HotelId = 10017,
                            MaxOccupants = 4,
                            Rate = 160.0,
                            RoomCount = 3,
                            RoomName = "2 Queen"
                        },
                        new
                        {
                            Id = 10042,
                            Amenities = "WiFi, TV, Mini Fridge, Ensuite Bathroom",
                            HotelId = 10017,
                            MaxOccupants = 2,
                            Rate = 200.0,
                            RoomCount = 2,
                            RoomName = "1 Suite"
                        });
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AirportCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            AirportCode = "JFK",
                            City = "New York",
                            Country = "USA",
                            Region = "NY"
                        },
                        new
                        {
                            Id = 1002,
                            AirportCode = "YYZ",
                            City = "Toronto",
                            Country = "Canada",
                            Region = "ON"
                        },
                        new
                        {
                            Id = 1003,
                            AirportCode = "JFK",
                            City = "New York",
                            Country = "USA",
                            Region = "NY"
                        },
                        new
                        {
                            Id = 1004,
                            AirportCode = "YYZ",
                            City = "Toronto",
                            Country = "Canada",
                            Region = "ON"
                        },
                        new
                        {
                            Id = 1005,
                            AirportCode = "LHR",
                            City = "London",
                            Country = "United Kingdom",
                            Region = "ENG"
                        },
                        new
                        {
                            Id = 1006,
                            AirportCode = "TXL",
                            City = "Berlin",
                            Country = "Germany",
                            Region = "BE"
                        },
                        new
                        {
                            Id = 1007,
                            AirportCode = "HND",
                            City = "Tokyo",
                            Country = "Japan",
                            Region = "13"
                        },
                        new
                        {
                            Id = 1008,
                            AirportCode = "SYD",
                            City = "Sydney",
                            Country = "Australia",
                            Region = "NSW"
                        },
                        new
                        {
                            Id = 1009,
                            AirportCode = "GIG",
                            City = "Rio de Janeiro",
                            Country = "Brazil",
                            Region = "RJ"
                        },
                        new
                        {
                            Id = 1010,
                            AirportCode = "CPT",
                            City = "Cape Town",
                            Country = "South Africa",
                            Region = "WC"
                        },
                        new
                        {
                            Id = 1011,
                            AirportCode = "BOM",
                            City = "Mumbai",
                            Country = "India",
                            Region = "MH"
                        },
                        new
                        {
                            Id = 1012,
                            AirportCode = "PEK",
                            City = "Beijing",
                            Country = "China",
                            Region = "BJ"
                        },
                        new
                        {
                            Id = 1013,
                            AirportCode = "CDG",
                            City = "Paris",
                            Country = "France",
                            Region = "IDF"
                        },
                        new
                        {
                            Id = 1014,
                            AirportCode = "FCO",
                            City = "Rome",
                            Country = "Italy",
                            Region = "RM"
                        },
                        new
                        {
                            Id = 1015,
                            AirportCode = "BCN",
                            City = "Barcelona",
                            Country = "Spain",
                            Region = "CT"
                        },
                        new
                        {
                            Id = 1016,
                            AirportCode = "SVO",
                            City = "Moscow",
                            Country = "Russia",
                            Region = "MOW"
                        },
                        new
                        {
                            Id = 1017,
                            AirportCode = "ICN",
                            City = "Seoul",
                            Country = "South Korea",
                            Region = "11"
                        });
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.Booking", b =>
                {
                    b.HasOne("GBC_Travel_Group23.Models.Client", "Client")
                        .WithMany("Bookings")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GBC_Travel_Group23.Models.CarRental", "CarRental")
                        .WithMany("Bookings")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GBC_Travel_Group23.Models.Flight", "Flight")
                        .WithMany("Bookings")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GBC_Travel_Group23.Models.HotelRoom", "HotelRoom")
                        .WithMany("Bookings")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CarRental");

                    b.Navigation("Client");

                    b.Navigation("Flight");

                    b.Navigation("HotelRoom");
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.CarRental", b =>
                {
                    b.HasOne("GBC_Travel_Group23.Models.Location", "Location")
                        .WithMany("CarRentals")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.Flight", b =>
                {
                    b.HasOne("GBC_Travel_Group23.Models.Location", "ArrivalLocation")
                        .WithMany("ArrivalFlights")
                        .HasForeignKey("ArrivalLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GBC_Travel_Group23.Models.Location", "DepartureLocation")
                        .WithMany("DepartureFlights")
                        .HasForeignKey("DepartureLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ArrivalLocation");

                    b.Navigation("DepartureLocation");
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.Hotel", b =>
                {
                    b.HasOne("GBC_Travel_Group23.Models.Location", "Location")
                        .WithMany("Hotels")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.HotelRoom", b =>
                {
                    b.HasOne("GBC_Travel_Group23.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.CarRental", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.Client", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.Flight", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.HotelRoom", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("GBC_Travel_Group23.Models.Location", b =>
                {
                    b.Navigation("ArrivalFlights");

                    b.Navigation("CarRentals");

                    b.Navigation("DepartureFlights");

                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
